# Generated by Django 2.1.9 on 2019-06-16 23:39

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Almacen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, max_length=255)),
                ('numero', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Botella',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folio', models.CharField(max_length=12, unique=True)),
                ('tipo_marbete', models.CharField(blank=True, max_length=255)),
                ('fecha_elaboracion_marbete', models.CharField(blank=True, max_length=255)),
                ('lote_produccion_marbete', models.CharField(blank=True, max_length=255)),
                ('url', models.URLField(blank=True, max_length=255)),
                ('nombre_marca', models.CharField(blank=True, max_length=255)),
                ('tipo_producto', models.CharField(blank=True, max_length=255)),
                ('graduacion_alcoholica', models.CharField(blank=True, max_length=255)),
                ('capacidad', models.IntegerField(blank=True, null=True)),
                ('origen_del_producto', models.CharField(blank=True, max_length=255)),
                ('fecha_importacion', models.CharField(blank=True, max_length=255)),
                ('nombre_fabricante', models.CharField(blank=True, max_length=255)),
                ('rfc_fabricante', models.CharField(blank=True, max_length=255)),
                ('estado', models.CharField(choices=[('2', 'NUEVA'), ('1', 'CON LIQUIDO'), ('0', 'VACIA'), ('3', 'PERDIDA')], default='2', max_length=1)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('fecha_baja', models.DateTimeField(blank=True, default=None, null=True)),
                ('peso_cristal', models.IntegerField(blank=True, default=0, null=True)),
                ('peso_inicial', models.IntegerField(blank=True, default=0, null=True)),
                ('precio_unitario', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('ingrediente', models.CharField(blank=True, max_length=255)),
                ('categoria', models.CharField(blank=True, max_length=255)),
                ('almacen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='botellas_almacen', to='core.Almacen')),
            ],
        ),
        migrations.CreateModel(
            name='Caja',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField(default=1)),
                ('nombre', models.CharField(blank=True, max_length=255)),
                ('almacen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cajas', to='core.Almacen')),
            ],
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('razon_social', models.CharField(blank=True, max_length=255)),
                ('rfc', models.CharField(blank=True, max_length=13)),
                ('direccion', models.TextField(blank=True, max_length=500)),
                ('ciudad', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ConsumoRecetaVendida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('volumen', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Ingrediente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=255, unique=True)),
                ('nombre', models.CharField(max_length=255)),
                ('factor_peso', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredientes', to='core.Categoria')),
            ],
        ),
        migrations.CreateModel(
            name='IngredienteReceta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volumen', models.IntegerField()),
                ('ingrediente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Ingrediente')),
            ],
        ),
        migrations.CreateModel(
            name='Inspeccion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('0', 'DIARIA'), ('1', 'TOTAL')], default='0', max_length=1)),
                ('fecha_alta', models.DateField(auto_now_add=True)),
                ('timestamp_alta', models.DateTimeField(auto_now_add=True)),
                ('fecha_update', models.DateField(auto_now=True)),
                ('timestamp_update', models.DateTimeField(auto_now=True)),
                ('estado', models.CharField(choices=[('0', 'ABIERTA'), ('1', 'CERRADA')], default='0', max_length=1)),
                ('almacen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspecciones_almacen', to='core.Almacen')),
            ],
        ),
        migrations.CreateModel(
            name='ItemInspeccion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peso_botella', models.IntegerField(blank=True, null=True)),
                ('timestamp_inspeccion', models.DateTimeField(auto_now=True)),
                ('inspeccionado', models.BooleanField(default=False)),
                ('botella', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspecciones_botella', to='core.Botella')),
                ('inspeccion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items_inspeccionados', to='core.Inspeccion')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folio', models.CharField(max_length=12)),
                ('tipo_marbete', models.CharField(blank=True, max_length=255)),
                ('fecha_elaboracion_marbete', models.CharField(blank=True, max_length=255)),
                ('lote_produccion_marbete', models.CharField(blank=True, max_length=255)),
                ('url', models.URLField(blank=True, max_length=255)),
                ('nombre_marca', models.CharField(blank=True, max_length=255)),
                ('tipo_producto', models.CharField(blank=True, max_length=255)),
                ('graduacion_alcoholica', models.CharField(blank=True, max_length=255)),
                ('capacidad', models.IntegerField(blank=True, null=True)),
                ('origen_del_producto', models.CharField(blank=True, max_length=255)),
                ('fecha_importacion', models.CharField(blank=True, max_length=255)),
                ('nombre_fabricante', models.CharField(blank=True, max_length=255)),
                ('rfc_fabricante', models.CharField(blank=True, max_length=255)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('peso_cristal', models.IntegerField(blank=True, null=True)),
                ('precio_unitario', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('ingrediente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productos', to='core.Ingrediente')),
            ],
        ),
        migrations.CreateModel(
            name='ProductoSinRegistro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sucursal', models.CharField(blank=True, max_length=255)),
                ('codigo_pos', models.CharField(blank=True, max_length=255)),
                ('caja', models.IntegerField(blank=True, null=True)),
                ('nombre', models.CharField(blank=True, max_length=255)),
                ('fecha', models.DateField(blank=True, default=datetime.date.today, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('razon_social', models.CharField(blank=True, max_length=255)),
                ('rfc', models.CharField(blank=True, max_length=13)),
                ('direccion', models.TextField(blank=True, max_length=500)),
                ('ciudad', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Receta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_pos', models.CharField(max_length=255)),
                ('nombre', models.CharField(max_length=255)),
                ('ingredientes', models.ManyToManyField(through='core.IngredienteReceta', to='core.Ingrediente')),
            ],
        ),
        migrations.CreateModel(
            name='Sucursal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('razon_social', models.CharField(blank=True, max_length=255)),
                ('rfc', models.CharField(blank=True, max_length=13)),
                ('direccion', models.TextField(blank=True, max_length=500)),
                ('ciudad', models.CharField(blank=True, max_length=255)),
                ('latitud', models.DecimalField(blank=True, decimal_places=3, max_digits=9, null=True)),
                ('longitud', models.DecimalField(blank=True, decimal_places=3, max_digits=9, null=True)),
                ('codigo_postal', models.CharField(blank=True, max_length=5)),
                ('slug', models.CharField(blank=True, max_length=255)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sucursales', to='core.Cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Traspaso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('almacen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traspasos_almacen', to='core.Almacen')),
                ('botella', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traspasos_botella', to='core.Botella')),
                ('sucursal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traspasos_sucursal', to='core.Sucursal')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Venta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('unidades', models.IntegerField()),
                ('importe', models.IntegerField()),
                ('caja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ventas_caja', to='core.Caja')),
                ('receta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ventas_receta', to='core.Receta')),
                ('sucursal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ventas_sucursal', to='core.Sucursal')),
            ],
        ),
        migrations.AddField(
            model_name='receta',
            name='sucursal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recetas', to='core.Sucursal'),
        ),
        migrations.AddField(
            model_name='inspeccion',
            name='sucursal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspecciones_sucursal', to='core.Sucursal'),
        ),
        migrations.AddField(
            model_name='inspeccion',
            name='usuario_alta',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inspecciones_usuario_alta', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='inspeccion',
            name='usuario_cierre',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inspecciones_usuario_cierre', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ingredientereceta',
            name='receta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Receta'),
        ),
        migrations.AddField(
            model_name='consumorecetavendida',
            name='ingrediente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumos_ingrediente', to='core.Ingrediente'),
        ),
        migrations.AddField(
            model_name='consumorecetavendida',
            name='receta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumos_receta', to='core.Receta'),
        ),
        migrations.AddField(
            model_name='consumorecetavendida',
            name='venta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumos_venta', to='core.Venta'),
        ),
        migrations.AddField(
            model_name='botella',
            name='producto',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='botellas', to='core.Producto'),
        ),
        migrations.AddField(
            model_name='botella',
            name='proveedor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='botellas_proveedor', to='core.Proveedor'),
        ),
        migrations.AddField(
            model_name='botella',
            name='sucursal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='botellas_sucursal', to='core.Sucursal'),
        ),
        migrations.AddField(
            model_name='botella',
            name='usuario_alta',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='almacen',
            name='sucursal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='almacenes', to='core.Sucursal'),
        ),
        migrations.AddField(
            model_name='user',
            name='sucursales',
            field=models.ManyToManyField(to='core.Sucursal'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='ingredientereceta',
            unique_together={('receta', 'ingrediente')},
        ),
    ]
